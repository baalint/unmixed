%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 352 274
%%HiResBoundingBox: 0 0 351.95 273.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CWVVYP+Helvetica
%!FontType1-1.0: CWVVYP+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CWVVYP+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 523 732] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 73 /I put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F872B092288AB4E433417193564C10FF9F9378064D49B1A2A5D9E9B
E835700215BFF97FEDD1A467992222571F1844860296640B1C2A73FC726262E7
5458325B2F5D5A226FE6A47A6C35890BC79295A0D8749A386550B06FEF7C5293
2888A149A7549AA247705219403D3277F3211C86407FB645DEBDF0BBD638B568
123BA3E5CAD23C6FF5ADC6C9FE3B4173BCEC94A158E87B5C885BA10163318887
C4326DF86B1FA5F4A57D44A53CB84B9A273797B79BAF83668C296E3D71847F65
3FAF7D7B9B4D516069CEAF70302DE3AA2EAC036357617CBD27392A8522CD973C
07ED462506BB23B61E1B13919043D3BBECF407C91D56E0D1B7A5042290EDA5F3
FE5DFCDD74573C9E839CD5B3F7E9265A0BD963D22BE1B802D9EE37BA91D55CC2
7E5810DE30574F3DEF41FD3BE0C175DE82371E3F0AC2DD0F7AFAB7665A5674C8
2DE2022760B40C68B0C6EAD8774697680A905AAD14896871B34A3159D3DF4DF8
969B05E5B6B0A191E4BE02E611FFA4880C2EF9608A19C01F464531AEB4CD8260
A7ACDFA69C93EE520A357B32C51BEDECC7BB8DCF35FAB29C4667EA70564FE058
5F1C5646526B0759A0BF387BFF2534347A242B5865895E058245CC558A4BF0E4
0D9EEB95544A29DB703B64002C2150A98581CB74BBF1674ACF1914B3087BC05B
9AEF1D85D873E6E0ECB3D2ACCAC901AE0174BC3EA0327DBA379A6B5DB904AF7E
741F115B15D88465BAC6DCF327A6C6EB00AECD70C9F0DECE4F75EE0821C2F5AD
20BCE68F39B6DD75E08863F629EF4010656730964B9B7426011ABBA03518CAE1
0B30EFB1CEC6B1AE3410C25C3CFBE6B9B7745FF4165186B6AD9C416AAC5D435B
43759448F394EB625532A0EAF5F9058F58BDF9AB2A4C663A0EE30EF9503CB9CA
CB5309DBB19133C4FDEDDF5211B50883090A91AED98A397E122427D2CF9A6943
61D603CC2EC5672C8AE8F09A7B21DE9792346731E82F0F30589A70E99FBDD1A6
D41BE5C587913D7D280CC4BE284B989EE5614FCA6A15B56BD881C0DDBA39601E
7AF0BE78B8312C80CC848BD90771B069F6E57B636C8C6DCBBA5A9F317313E9CF
785C7ED205E008C76FFD79BA55A4AB6AD1978EB6EFC7A9DEE175E1C9CC682612
0CB9C93B8C927F847037140E416D9EF90052139B4DCF9E944028CD96E0ABF7EA
FD861F51B8E4AA34B2A37D156017D4083A06BE2D6D4F768B919E78792206D2C3
0F2B986858B6B75859954ECF062E1C1D667AF8B31F9097E41324CD39D491FCF8
C2013B990A9A01A8BD15B58DD87A7988E7D0E5F15747E41F8A369878629C8A13
F729E1C2750CADFD2F26E25E2D96FE14F18DB01CA3E50E199D2CCF62FC840855
51DC8083D0302CFE1F17255C8665D501422F7B0D9814EB9A3106C682A9ABCC6A
2C952B45195B438C3229B6EE55CA07C47A323A92652D95128BB791E59AD67287
917A4765064168949079C5188FB22FBADEA5CFA95E0F685FC5722C6E9333D2CA
3EC8BF49BD848498B66E543165B5C806F4F2EEAE2E455292088E607AEE4F1B2C
521BB7B6DCC32E79E544EC50D2672F2D3C2373DDD54E4716DE5B7BA27E20902E
1380A241920E6294A5A757C36B5EF5AA102AD2AE98E77EB0BC8B62CA5598BE69
5C49445B9AFBCFDA019CDCC6A8204E087C3BE25D8E48A68D72B0E78F8EEBF2BB
6646FE3048E7922A5DC0C617BE910A6DD1EA029BED6D805AE742A0D1CD539C97
98C718AD5CD97C6AA63EBCEA7DD259B407D5DA377936792001593CD51E61247D
F81ACA4CA4A53D8D6963206D2F45A4507A5D8DBD8E3492BE4809743DA34A672F
4DA97FE73F1E60AA42A442C96C32B3CE22E3F39C1D43C2C0AAC11CE9F54B464A
D3D72544CCCB8F72D4AFDF07DE3797D5019E3A59EBF63E2926F7ED5CBCFC0B50
181FB81E302A8E085DC35327E7449AC27E84D960C0A109DAF8055604303D4B9D
EF98FCFDE2003D20B46289B3267FCF6CA49C6B8960A57146FE63E1A21FBCE0C4
AA1CFF145BB21D4897DCFBDEF88303605F019ED01B983272A9FAD01A77903EDB
0E5D0FAE6CA7AFDDC165E0E5F01AE7519B576805D0AEC6503847D3E6D071EA6F
C90A56DE6D107D8B496A362A91CF6519E90214C6453054F03FF7EC83B5DE82C4
7642FEE544E5C5789004938BB6FA5ACEAFDB7CD72F98E707C093F5FD75172E1E
B542A06D5928D851D378FA71BF70CB4B9028FA60F324EAAD4DF04F1240DDAF99
D264161B63AFA3E54BF34160420C2C2C6B0A64BCDBA397704DF4FF9ED5AF4403
53106BA59D35B8C6A20A03E7954152F1856AC5CEA82800AACF6D4027F9E00A02
16C0DBE0A3FE4C42A1A154425E361708D62DCF5E97A7A38567AB3BBE53937D60
D9E894F23F53005420ACD1886AF20F886DD8D6EA3AB1233C2B5F39185CD7B3FA
C122FBF5ADC1FAF0CCEF63978D01D827236AAE659D36DE2F2EEE32709855FC12
06C75B3D82A2B3B41A83455D565A79769F58450861C2665F45B8060608B8AE8A
D9AA586EA4AD61BC936E7B86BF6B489FB089EF60C9F544730A19E6916394BA10
88C25C552AA3FABFE47C25C34DB56D102CCA582C25700EB982C610FDC3E65210
CF20971DE96EFEDEF463DF0496A64F2469E0B2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CWVVYP+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 351.95 273.12 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9394] sc
0 0 3859.52 2926.72 re
f
/DeviceGray {} cs
[0.9414] sc
0 0 3859.52 2926.72 re
f
/DeviceGray {} cs
[1] sc
186.07 142.246 3269.37 2549.38 re
f
5.00324 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
186.07 142.246 m
3455.44 142.246 l
S
186.07 142.246 m
186.07 174.941 l
S
730.969 142.246 m
730.969 174.941 l
S
1275.86 142.246 m
1275.86 174.941 l
S
1820.75 142.246 m
1820.75 174.941 l
S
2365.65 142.246 m
2365.65 174.941 l
S
2910.54 142.246 m
2910.54 174.941 l
S
3455.44 142.246 m
3455.44 174.941 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 9.79102 1.60664] Tm
0 0 Td
/F8_0 8.99995 Tf
(-0.1)
[2.996983
0
5.003972
0
2.501986
0
5.003972
0] Tj
-4984.5 TJm
(0)
[5.003972
0] Tj
-5008.66 TJm
(0.1)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.2)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.3)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.4)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.5)
[5.003972
0
2.501986
0
5.003972
0] Tj
Q
186.07 142.246 m
186.07 2691.62 l
S
186.07 142.246 m
218.762 142.246 l
S
186.07 425.512 m
218.762 425.512 l
S
186.07 708.773 m
218.762 708.773 l
S
186.07 992.039 m
218.762 992.039 l
S
186.07 1275.3 m
218.762 1275.3 l
S
186.07 1558.57 m
218.762 1558.57 l
S
186.07 1841.82 m
218.762 1841.82 l
S
186.07 2125.09 m
218.762 2125.09 l
S
186.07 2408.35 m
218.762 2408.35 l
S
186.07 2691.62 m
218.762 2691.62 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 8.92969 10.9168] Tm
0 0 Td
/F8_0 8.99995 Tf
(0)
[5.003972
0] Tj
-8.81641 28.3266 Td
(0.2)
[5.003972
0
2.501986
0
5.003972
0] Tj
-8.81641 56.6532 Td
(0.4)
[5.003972
0
2.501986
0
5.003972
0] Tj
-8.81641 84.9798 Td
(0.6)
[5.003972
0
2.501986
0
5.003972
0] Tj
-8.81641 113.3064 Td
(0.8)
[5.003972
0
2.501986
0
5.003972
0] Tj
0 141.633 Td
(1)
[5.003972
0] Tj
-8.81641 169.9596 Td
(1.2)
[5.003972
0
2.501986
0
5.003972
0] Tj
-8.81641 198.2862 Td
(1.4)
[5.003972
0
2.501986
0
5.003972
0] Tj
-8.81641 226.6128 Td
(1.6)
[5.003972
0
2.501986
0
5.003972
0] Tj
-8.81641 254.9394 Td
(1.8)
[5.003972
0
2.501986
0
5.003972
0] Tj
Q
0 J
/DeviceRGB {} CS
[0 0.447 0.7402] SC
186.07 171.816 m
295.047 142.246 l
404.031 142.254 l
513.008 142.246 l
621.984 537.555 l
730.969 227.016 l
839.945 188.805 l
948.922 163.266 l
1057.91 457.574 l
1166.88 1401.84 l
1275.86 902.414 l
1384.84 911.996 l
1493.82 932.398 l
1602.79 484.055 l
1711.78 728.887 l
1820.75 929.68 l
1929.73 1094.83 l
2038.71 1430.08 l
2147.69 1584.68 l
2256.67 1080.64 l
2365.65 1038.45 l
2474.63 957.605 l
2583.61 813.73 l
2692.59 481.84 l
2801.57 575.719 l
2910.54 769.07 l
3019.53 420.738 l
3128.5 406.492 l
3237.48 142.246 l
3346.46 142.246 l
S
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
186.07 442.836 m
295.047 142.254 l
513.008 142.254 l
621.984 1176.96 l
730.969 562.754 l
839.945 985.008 l
948.922 1240.15 l
1057.91 791.008 l
1166.88 2451.99 l
1275.86 1477.99 l
1384.84 1363.37 l
1493.82 1089.51 l
1602.79 517.664 l
1711.78 641.594 l
1820.75 194.938 l
1929.73 370.402 l
2038.71 604.254 l
2147.69 349.797 l
2256.67 568.242 l
2365.65 725.848 l
2474.63 756.117 l
2583.61 532.777 l
2692.59 550.043 l
2801.57 307.234 l
2910.54 1190.65 l
3019.53 1150.43 l
3128.5 675.734 l
3237.48 142.254 l
3346.46 142.254 l
S
/DeviceGray {} cs
[1] sc
2625.24 2375.7 749.383 235.102 re
f
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 297.726 251.631] Tm
0 0 Td
/F8_0 8.09996 Tf
(Intercept)
[2.251789
0
4.503578
0
2.251789
0
4.503578
0
2.697287
0
4.04998
0
4.503578
0
4.503578
0
2.251789
0] Tj
Q
/DeviceRGB {} CS
[0 0.447 0.7402] SC
2654.68 2545.7 m
2955.17 2545.7 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 297.726 241.142] Tm
0 0 Td
/F8_0 8.09996 Tf
(effect)
[4.503578
0
2.251789
0
2.251789
0
4.503578
0
4.04998
0
2.251789
0] Tj
Q
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
2654.68 2440.81 m
2955.17 2440.81 l
S
0 j
/DeviceGray {} CS
[0.1489] SC
2625.24 2375.7 749.383 235.102 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CWVVYP+Helvetica
%%EOF
