%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 361 275
%%HiResBoundingBox: 0 0 360.95 274.82
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font QVHDHC+Helvetica
%!FontType1-1.0: QVHDHC+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /QVHDHC+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 709] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F8C33802B3762C3C805A494BF8261E518D0D5CB6F6771EA02065F3A
FABC3680D991C75EE64C854674BE51E1B269DC7A0E7F021EEB2AC20B4EA6EEEE
E7FD841916094008658C3EECA0E5D4607CBE61B50273B103AA4EE4B44D9DC202
F8247C5FFAF80B133F1680D148C999E1A68059F25149F6BE0FD1A14B566844E6
1948D526C9ABDA1482254159A36BF3FAEA737A05916439936CC74111C4F13802
0B43B6FE21AA5340279B6D710B2E47D3B43D9E586C28959FF67E852DFA2090F3
90D7F2885CD52D790701CB29384910C120E1EE41522A48EC07AEFE46B52EC173
11841112E023BE3C602C3765D397CFFBCCD113E6F50B43E8646FB41145D2EB0E
33C3E73C94DB63E218B9207903F0740D21EDD1E3C51935417E50F4D604EB87DA
A880BF3FF7C64391629B489F0290F6A35FF8E233CDAF5AB054C799E25610F473
06F8FF751612AFEC830D470EE51D9B4A12EBEFC284B9F6A9BDBD9C762FC950AC
0CE74592879A76A57620C85E5F6519E5E76A71850DF4D050CCA46C5B1ECD4B08
4A2E6FEABE030AA5D20043DDAADA54DDB377906D8E2FD54F6B4EC5D17576E8D6
2DAD0919F57D4D2AC512418E9A1C46A8311424A3C10F31F1579F146D7EF1C35F
8F58785B3B6B8E5DCBEB0C1535E786A3F2CC384DCC3612F42343179E4A605A13
5433143F8AA19D404B4C1D6A2CF0199C34CF4CF4E39AF85C32BCE5000A7C10F6
8872D9B0693ED2F7717CEC30D830E2E98A1C763038079290967C31C0A35CAE7D
927103F6E018C27D66D47645B8EE4E31BDD3B776C6465611174C3512582B73AC
59DC45E49C979C9EC235238735D1C79FF8AB7D5DD668894D307B2DFA6E9B153E
F688191D7F5D968A0D097D6423253A86AE15189B14517E48FE49BB49632F74C3
715151E00DFD1FE21E263BB3B3F3B9DB6DC71CE6B68957ED5D4AF0968CF89D10
EBCBB4BDFC93111ED09774A043B94984AA45265009EB3CFDACD4C52693656885
6D35503E2AFAEACABF2F3617A203B79025B9AE72DB86B0059AE0E3FFB3E00979
2F63515ADBA1AB51F10F17ECF433D480F4465D5CCB5B9BF25589540D000E66E2
246DE7596E02ADA7E01482B901236FCD1E57F5871E1408CF7CA279D3689A99EA
5368DC6215246A709C5C65855E8887BDB6EB7E1A1A0BA41B1B26DC2B8866C8A3
14A6D279572770BF0A5CDD0E5B473F3F15358017C09F2455A83807E48759DB9A
700AEFE3B197906B4D8EA571DFE3704D7C819CD002D3C0C38FE390ED5AD35DED
08000FA047D0377CF5A6766376EB472D6E93DFA002C4F329E98DA13DB15AFAEA
09A57F5FC8F3D764D2FDA0C7E076EA9B89021E6B49A2F05914B71E7EEA29BFC0
43009B9959A93F31B17816BFEAF44790DE1E5F3347AC4C0AB43286B42651867B
F6253BD036A93691267B6BD0338520BE44098023F29ACA0B7A96F07F22A87005
8FCAEB795DAD71CC7D4F390D6CBDA83D41AAE55C8B978185F87A794511EC94F5
54C749095EFA3CF332579068FB86BAA0E0B0F929CF7EC219E0635A1533308F6B
5C7D69CAFD877DFC3B69CCE55A1A570004EAECC9EDB3C967CBC71975C3DEBFDF
471D39E07D20C5550A67B6EB6946A8D475748821E07BFBA2C10949AF3642BE2D
0920AC049820AFF3FF53CD7019F29A12FB0C1E82096BBB0CB2F947E046DAD946
9D9A678D7FBF324BF4729B21D819D5AAA65F0420C38D498A2E3152A72BC0AB6E
A1E5F34A0F409966DD2487D2AEEC21EEA4C6B9BF9BFAE1C817081BA5519AD7CB
649C49B6C3097FA537F2D5CAC21785DD59552850009D20D42F3054D59A700882
254DD990813685D355A302FDCBD32B5DCE005452B3EDA184D0BD195A55E79A58
BEF6F1C154E6F06758DBB26E50A4CD69CDB0F994D6507384FB8417C8E28D39F8
4D2BC1B7DFD2AB2E694F22762DE60723E9C553C450935363C8249918EB2868
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /QVHDHC+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 360.95 274.82 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9394] sc
0 0 3896.15 2941.23 re
f
/DeviceGray {} cs
[0.9414] sc
0 0 3896.15 2941.23 re
f
/DeviceGray {} cs
[1] sc
244.738 142.066 3254.68 2564.07 re
f
5.00324 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
244.738 142.066 m
3499.41 142.066 l
S
244.738 2706.13 m
3499.41 2706.13 l
S
244.738 142.066 m
244.738 174.613 l
S
606.367 142.066 m
606.367 174.613 l
S
967.996 142.066 m
967.996 174.613 l
S
1329.63 142.066 m
1329.63 174.613 l
S
1691.26 142.066 m
1691.26 174.613 l
S
2052.89 142.066 m
2052.89 174.613 l
S
2414.52 142.066 m
2414.52 174.613 l
S
2776.16 142.066 m
2776.16 174.613 l
S
3137.79 142.066 m
3137.79 174.613 l
S
3499.41 142.066 m
3499.41 174.613 l
S
244.738 2706.13 m
244.738 2673.59 l
S
606.367 2706.13 m
606.367 2673.59 l
S
967.996 2706.13 m
967.996 2673.59 l
S
1329.63 2706.13 m
1329.63 2673.59 l
S
1691.26 2706.13 m
1691.26 2673.59 l
S
2052.89 2706.13 m
2052.89 2673.59 l
S
2414.52 2706.13 m
2414.52 2673.59 l
S
2776.16 2706.13 m
2776.16 2673.59 l
S
3137.79 2706.13 m
3137.79 2673.59 l
S
3499.41 2706.13 m
3499.41 2673.59 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 11.25 1.58867] Tm
0 0 Td
/F8_0 8.99995 Tf
(0.119)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1842.64 TJm
(0.12)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
-1745.64 TJm
(0.121)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.16 TJm
(0.122)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.21 TJm
(0.123)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.12 TJm
(0.124)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.16 TJm
(0.125)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.16 TJm
(0.126)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.16 TJm
(0.127)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
-1516.21 TJm
(0.128)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0
5.003972
0] Tj
Q
244.738 142.066 m
244.738 2706.13 l
S
3499.41 142.066 m
3499.41 2706.13 l
S
244.738 142.066 m
277.285 142.066 l
S
244.738 508.359 m
277.285 508.359 l
S
244.738 874.656 m
277.285 874.656 l
S
244.738 1240.95 m
277.285 1240.95 l
S
244.738 1607.25 m
277.285 1607.25 l
S
244.738 1973.54 m
277.285 1973.54 l
S
244.738 2339.84 m
277.285 2339.84 l
S
244.738 2706.13 m
277.285 2706.13 l
S
3499.41 142.066 m
3466.87 142.066 l
S
3499.41 508.359 m
3466.87 508.359 l
S
3499.41 874.656 m
3466.87 874.656 l
S
3499.41 1240.95 m
3466.87 1240.95 l
S
3499.41 1607.25 m
3466.87 1607.25 l
S
3499.41 1973.54 m
3466.87 1973.54 l
S
3499.41 2339.84 m
3466.87 2339.84 l
S
3499.41 2706.13 m
3466.87 2706.13 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 0.103125 10.8988] Tm
0 0 Td
/F8_0 8.99995 Tf
(0.08)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
5.87734 36.6301 Td
(0.1)
[5.003972
0
2.501986
0
5.003972
0] Tj
0 73.2598 Td
(0.12)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
0 109.8895 Td
(0.14)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
0 146.5192 Td
(0.16)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
0 183.1489 Td
(0.18)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
5.87734 219.7786 Td
(0.2)
[5.003972
0
2.501986
0
5.003972
0] Tj
0 256.4083 Td
(0.22)
[5.003972
0
2.501986
0
5.003972
0
5.003972
0] Tj
Q
7.3469 w
0 J
0 j
/DeviceRGB {} CS
[0 0.447 0.7402] SC
554.406 845.676 m
554.406 862.242 540.977 875.676 524.406 875.676 c
507.84 875.676 494.41 862.242 494.41 845.676 c
494.41 829.109 507.84 815.68 524.406 815.68 c
540.977 815.68 554.406 829.109 554.406 845.676 c
h
S
624.695 846.012 m
624.695 862.578 611.266 876.008 594.699 876.008 c
578.133 876.008 564.703 862.578 564.703 846.012 c
564.703 829.445 578.133 816.016 594.699 816.016 c
611.266 816.016 624.695 829.445 624.695 846.012 c
h
S
702.457 847.523 m
702.457 864.09 689.027 877.52 672.461 877.52 c
655.895 877.52 642.465 864.09 642.465 847.523 c
642.465 830.953 655.895 817.523 672.461 817.523 c
689.027 817.523 702.457 830.953 702.457 847.523 c
h
S
794.004 849.012 m
794.004 865.578 780.574 879.008 764.004 879.008 c
747.438 879.008 734.008 865.578 734.008 849.012 c
734.008 832.441 747.438 819.012 764.004 819.012 c
780.574 819.012 794.004 832.441 794.004 849.012 c
h
S
900.449 969.453 m
900.449 986.02 887.02 999.449 870.453 999.449 c
853.883 999.449 840.453 986.02 840.453 969.453 c
840.453 952.887 853.883 939.453 870.453 939.453 c
887.02 939.453 900.449 952.887 900.449 969.453 c
h
S
1011.63 857.438 m
1011.63 874.004 998.203 887.438 981.637 887.438 c
965.066 887.438 951.637 874.004 951.637 857.438 c
951.637 840.871 965.066 827.441 981.637 827.441 c
998.203 827.441 1011.63 840.871 1011.63 857.438 c
h
S
1133.42 854.578 m
1133.42 871.145 1119.99 884.574 1103.42 884.574 c
1086.85 884.574 1073.42 871.145 1073.42 854.578 c
1073.42 838.008 1086.85 824.578 1103.42 824.578 c
1119.99 824.578 1133.42 838.008 1133.42 854.578 c
h
S
1276.05 855.27 m
1276.05 871.836 1262.62 885.27 1246.05 885.27 c
1229.48 885.27 1216.05 871.836 1216.05 855.27 c
1216.05 838.703 1229.48 825.273 1246.05 825.273 c
1262.62 825.273 1276.05 838.703 1276.05 855.27 c
h
S
1448.21 933.68 m
1448.21 950.246 1434.79 963.676 1418.22 963.676 c
1401.65 963.676 1388.22 950.246 1388.22 933.68 c
1388.22 917.113 1401.65 903.68 1418.22 903.68 c
1434.79 903.68 1448.21 917.113 1448.21 933.68 c
h
S
1643.97 1860.31 m
1643.97 1876.88 1630.54 1890.31 1613.97 1890.31 c
1597.41 1890.31 1583.98 1876.88 1583.98 1860.31 c
1583.98 1843.75 1597.41 1830.32 1613.97 1830.32 c
1630.54 1830.32 1643.97 1843.75 1643.97 1860.31 c
h
S
1857.61 1272.3 m
1857.61 1288.87 1844.17 1302.3 1827.61 1302.3 c
1811.04 1302.3 1797.61 1288.87 1797.61 1272.3 c
1797.61 1255.74 1811.04 1242.31 1827.61 1242.31 c
1844.17 1242.31 1857.61 1255.74 1857.61 1272.3 c
h
S
2075 1281.95 m
2075 1298.51 2061.57 1311.94 2045 1311.94 c
2028.44 1311.94 2015.01 1298.51 2015.01 1281.95 c
2015.01 1265.38 2028.44 1251.95 2045 1251.95 c
2061.57 1251.95 2075 1265.38 2075 1281.95 c
h
S
2332.4 1303.92 m
2332.4 1320.49 2318.97 1333.92 2302.4 1333.92 c
2285.84 1333.92 2272.41 1320.49 2272.41 1303.92 c
2272.41 1287.36 2285.84 1273.93 2302.4 1273.93 c
2318.97 1273.93 2332.4 1287.36 2332.4 1303.92 c
h
S
2551.46 950.707 m
2551.46 967.273 2538.03 980.707 2521.46 980.707 c
2504.89 980.707 2491.46 967.273 2491.46 950.707 c
2491.46 934.141 2504.89 920.711 2521.46 920.711 c
2538.03 920.711 2551.46 934.141 2551.46 950.707 c
h
S
2745.18 1112.3 m
2745.18 1128.87 2731.75 1142.3 2715.19 1142.3 c
2698.62 1142.3 2685.19 1128.87 2685.19 1112.3 c
2685.19 1095.73 2698.62 1082.3 2715.19 1082.3 c
2731.75 1082.3 2745.18 1095.73 2745.18 1112.3 c
h
S
2916.85 1291.63 m
2916.85 1308.2 2903.42 1321.63 2886.85 1321.63 c
2870.29 1321.63 2856.85 1308.2 2856.85 1291.63 c
2856.85 1275.06 2870.29 1261.63 2886.85 1261.63 c
2903.42 1261.63 2916.85 1275.06 2916.85 1291.63 c
h
S
3043.98 1466.69 m
3043.98 1483.25 3030.55 1496.68 3013.99 1496.68 c
2997.42 1496.68 2983.99 1483.25 2983.99 1466.69 c
2983.99 1450.12 2997.42 1436.69 3013.99 1436.69 c
3030.55 1436.69 3043.98 1450.12 3043.98 1466.69 c
h
S
3155.31 1882.61 m
3155.31 1899.18 3141.88 1912.61 3125.31 1912.61 c
3108.75 1912.61 3095.32 1899.18 3095.32 1882.61 c
3095.32 1866.05 3108.75 1852.62 3125.31 1852.62 c
3141.88 1852.62 3155.31 1866.05 3155.31 1882.61 c
h
S
3218.02 2092.91 m
3218.02 2109.48 3204.59 2122.91 3188.02 2122.91 c
3171.45 2122.91 3158.02 2109.48 3158.02 2092.91 c
3158.02 2076.34 3171.45 2062.91 3188.02 2062.91 c
3204.59 2062.91 3218.02 2076.34 3218.02 2092.91 c
h
S
3243.15 1437.66 m
3243.15 1454.23 3229.72 1467.66 3213.16 1467.66 c
3196.59 1467.66 3183.16 1454.23 3183.16 1437.66 c
3183.16 1421.09 3196.59 1407.66 3213.16 1407.66 c
3229.72 1407.66 3243.15 1421.09 3243.15 1437.66 c
h
S
3279.9 1387.61 m
3279.9 1404.18 3266.47 1417.61 3249.91 1417.61 c
3233.34 1417.61 3219.91 1404.18 3219.91 1387.61 c
3219.91 1371.04 3233.34 1357.61 3249.91 1357.61 c
3266.47 1357.61 3279.9 1371.04 3279.9 1387.61 c
h
S
3253.36 1302.63 m
3253.36 1319.19 3239.93 1332.62 3223.36 1332.62 c
3206.79 1332.62 3193.36 1319.19 3193.36 1302.63 c
3193.36 1286.06 3206.79 1272.63 3223.36 1272.63 c
3239.93 1272.63 3253.36 1286.06 3253.36 1302.63 c
h
S
3209.89 1165.5 m
3209.89 1182.07 3196.46 1195.5 3179.89 1195.5 c
3163.32 1195.5 3149.89 1182.07 3149.89 1165.5 c
3149.89 1148.93 3163.32 1135.5 3179.89 1135.5 c
3196.46 1135.5 3209.89 1148.93 3209.89 1165.5 c
h
S
3107.31 930.676 m
3107.31 947.242 3093.88 960.676 3077.31 960.676 c
3060.74 960.676 3047.31 947.242 3047.31 930.676 c
3047.31 914.109 3060.74 900.68 3077.31 900.68 c
3093.88 900.68 3107.31 914.109 3107.31 930.676 c
h
S
2909.57 991.191 m
2909.57 1007.76 2896.14 1021.19 2879.57 1021.19 c
2863 1021.19 2849.57 1007.76 2849.57 991.191 c
2849.57 974.625 2863 961.195 2879.57 961.195 c
2896.14 961.195 2909.57 974.625 2909.57 991.191 c
h
S
2606.22 1139.96 m
2606.22 1156.53 2592.79 1169.96 2576.23 1169.96 c
2559.66 1169.96 2546.23 1156.53 2546.23 1139.96 c
2546.23 1123.4 2559.66 1109.97 2576.23 1109.97 c
2592.79 1109.97 2606.22 1123.4 2606.22 1139.96 c
h
S
2266.05 911.82 m
2266.05 928.387 2252.62 941.816 2236.05 941.816 c
2219.48 941.816 2206.05 928.387 2206.05 911.82 c
2206.05 895.25 2219.48 881.82 2236.05 881.82 c
2252.62 881.82 2266.05 895.25 2266.05 911.82 c
h
S
1935.51 905.906 m
1935.51 922.473 1922.08 935.902 1905.52 935.902 c
1888.95 935.902 1875.52 922.473 1875.52 905.906 c
1875.52 889.34 1888.95 875.91 1905.52 875.91 c
1922.08 875.91 1935.51 889.34 1935.51 905.906 c
h
S
1628.68 850.395 m
1628.68 866.961 1615.25 880.391 1598.68 880.391 c
1582.11 880.391 1568.68 866.961 1568.68 850.395 c
1568.68 833.824 1582.11 820.395 1598.68 820.395 c
1615.25 820.395 1628.68 833.824 1628.68 850.395 c
h
S
1351.75 846.941 m
1351.75 863.508 1338.32 876.938 1321.75 876.938 c
1305.19 876.938 1291.76 863.508 1291.76 846.941 c
1291.76 830.371 1305.19 816.941 1321.75 816.941 c
1338.32 816.941 1351.75 830.371 1351.75 846.941 c
h
S
/DeviceRGB {} CS
[1 0 0] SC
503.199 757.973 m
545.617 715.555 l
503.199 715.555 m
545.617 757.973 l
S
573.488 665.652 m
615.91 623.23 l
573.488 623.23 m
615.91 665.652 l
S
651.25 501.73 m
693.672 459.309 l
651.25 459.309 m
693.672 501.73 l
S
742.793 340.723 m
785.215 298.301 l
742.793 298.301 m
785.215 340.723 l
S
849.242 659.938 m
891.664 617.516 l
849.242 617.516 m
891.664 659.938 l
S
960.426 528.531 m
1002.84 486.109 l
960.426 486.109 m
1002.84 528.531 l
S
1082.21 407.832 m
1124.63 365.41 l
1082.21 365.41 m
1124.63 407.832 l
S
1224.84 274.133 m
1267.26 231.711 l
1224.84 231.711 m
1267.26 274.133 l
S
1397.01 1400.37 m
1439.43 1357.95 l
1397.01 1357.95 m
1439.43 1400.37 l
S
1592.76 2318.39 m
1635.18 2275.96 l
1592.76 2275.96 m
1635.18 2318.39 l
S
1806.39 1357.88 m
1848.82 1315.46 l
1806.39 1315.46 m
1848.82 1357.88 l
S
2023.79 1206.52 m
2066.21 1164.09 l
2023.79 1164.09 m
2066.21 1206.52 l
S
2281.19 1256.95 m
2323.61 1214.52 l
2281.19 1214.52 m
2323.61 1256.95 l
S
2500.25 1123.56 m
2542.67 1081.14 l
2500.25 1081.14 m
2542.67 1123.56 l
S
2693.98 1437.93 m
2736.4 1395.5 l
2693.98 1395.5 m
2736.4 1437.93 l
S
2865.64 1415 m
2908.06 1372.58 l
2865.64 1372.58 m
2908.06 1415 l
S
2992.78 1719.8 m
3035.2 1677.38 l
2992.78 1677.38 m
3035.2 1719.8 l
S
3104.1 2418.98 m
3146.52 2376.56 l
3104.1 2376.56 m
3146.52 2418.98 l
S
3166.81 2577.34 m
3209.23 2534.92 l
3166.81 2534.92 m
3209.23 2577.34 l
S
3191.95 1831.92 m
3234.37 1789.5 l
3191.95 1789.5 m
3234.37 1831.92 l
S
3228.7 1754.34 m
3271.12 1711.91 l
3228.7 1711.91 m
3271.12 1754.34 l
S
3202.15 1304.97 m
3244.57 1262.55 l
3202.15 1262.55 m
3244.57 1304.97 l
S
3158.68 1102.93 m
3201.1 1060.51 l
3158.68 1060.51 m
3201.1 1102.93 l
S
3056.1 884.695 m
3098.52 842.273 l
3056.1 842.273 m
3098.52 884.695 l
S
2858.36 956.461 m
2900.78 914.043 l
2858.36 914.043 m
2900.78 956.461 l
S
2555.02 993.234 m
2597.44 950.813 l
2555.02 950.813 m
2597.44 993.234 l
S
2214.84 966.203 m
2257.26 923.781 l
2214.84 923.781 m
2257.26 966.203 l
S
1884.3 834.695 m
1926.72 792.277 l
1884.3 792.277 m
1926.72 834.695 l
S
1577.47 792.391 m
1619.89 749.969 l
1577.47 749.969 m
1619.89 792.391 l
S
1300.54 638.547 m
1342.96 596.125 l
1300.54 596.125 m
1342.96 638.547 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font QVHDHC+Helvetica
%%EOF
