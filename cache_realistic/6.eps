%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.944444 \\(R2018b\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 355 274
%%HiResBoundingBox: 0 0 354.89 273.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font VWDYRY+Helvetica
%!FontType1-1.0: VWDYRY+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /VWDYRY+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 709] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF376BC0A03395982773F34FAD42F3136F303E2B799C3517DA7E0D6AA4
F681BB7C0B1DF874B26EA06D21786EB7666EB340A3421C0901DFE8D2D154340F
0FB045A8DB8128470F556BE5A8A528596D970243A17BD7069896DFA68B566C57
2A66D8FC23E277EF7CAF07A20243208014183388243BAE05A7AEBB4ADC504F9B
2DF552FB25E8058F88C21CD62482A10306A83CC2DC7DC5BFDE4B3D61C71A3294
1EA6CD3E886319B980D54C5B62FD13ACE06C174DDE69CBFB4F87986C304D561F
B633F4BD239D23CBD0B8246E9174301D56397B2BA0C9D314C948479B872A310F
790A6157C383F072B53DC44F386615FEECC367D2BA14A133362A43DAAC8D329A
23127D63C39CEE9EFBFFAF6584FF26043CB3978C3F579FE7E7F0D07314C899FB
CEA9FFD385245E500A647E37FD8B634879E51831CCE7FBC92863AE82DC05F85B
B0E1B00716F593FAD7CE21A4B68076180B63A1591C9533A783764AC5D7DD675F
C5AC04E0ED12BD64812749E091DA28AF191C880513C4A1549538174C9835158D
7FBF324BFD3197274782F1ACBCA83143551923B8A9E5DFCC9ADB503627EBD859
298D75FE78C4958EFF6D08D984CCB6AC4716BDC8739DACE7AEF04B0B070065F7
B17493EC0093E6DE21599E11471ED8544E710FBDF6E7CD17BFFD54CB31F57403
59F0AE64C72DA2E1D87E630614F590E6F016E105C202E66AD49EB86F699F4899
F363B4F0E7BAABA19CB0F0F1B06168FC1B17CC13A523F23C323CD5E10F76BCE8
7BCCEBA7D605C43D216B3716612EF732272B21C6EB88F157C29E11ADFC89BC1E
9BADF15CEA3A0D41E1BEFD6A8492F020AFD75F1ABE3CA40F0918F5977EE948E6
21D2E2CEDC8444DC393570F76A9CC32EF9F1AC1018897CD4221E6969C794FC03
B11E475EF01ED366BA7C7E274582C9EDA034FF16449D2585B3F3263532F67883
781EFCB7EEB1943E5CB8BC984C8AB2355C63EBFE219C1543AB17985E39539820
1A1E71B9B906D42FCC0ECFB65B6E63302326FF50A9DDB8C6FAB083DDE83F12BF
B169E4F33EB25217A44FC6D3E4FB51DD93DA8369C739BB1F11C1556195629F97
683FD5A05DDD86B2E2ABC79DD44F090E76934D4E9F1297C7DD498DCF8D4B976D
838EC15D6D9929E1E9DBF5BF9E2640337DA0C28C5ACCE160DF5C79D2D2426556
8640A58EEB33974E4DFCF20B89120E8813C51FE9BD4A17880D72AB4F7A054E39
03E24290BC75B8247D57BF376BFB9C954505E0EEE8CD8D8941A41EDC7FE56DC6
87BEEC2F4E6F2E10B9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /VWDYRY+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 354.89 273.12 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9394] sc
0 0 3888.93 2926.72 re
f
/DeviceGray {} cs
[0.9414] sc
0 0 3888.93 2926.72 re
f
/DeviceGray {} cs
[1] sc
215.477 142.246 3269.37 2549.38 re
f
5.00324 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
215.477 142.246 m
3484.85 142.246 l
S
215.477 2691.62 m
3484.85 2691.62 l
S
215.477 142.246 m
215.477 174.941 l
S
760.375 142.246 m
760.375 174.941 l
S
1305.27 142.246 m
1305.27 174.941 l
S
1850.16 142.246 m
1850.16 174.941 l
S
2395.06 142.246 m
2395.06 174.941 l
S
2939.95 142.246 m
2939.95 174.941 l
S
3484.85 142.246 m
3484.85 174.941 l
S
215.477 2691.62 m
215.477 2658.93 l
S
760.375 2691.62 m
760.375 2658.93 l
S
1305.27 2691.62 m
1305.27 2658.93 l
S
1850.16 2691.62 m
1850.16 2658.93 l
S
2395.06 2691.62 m
2395.06 2658.93 l
S
2939.95 2691.62 m
2939.95 2658.93 l
S
3484.85 2691.62 m
3484.85 2658.93 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 12.7316 1.60664] Tm
0 0 Td
/F8_0 8.99995 Tf
(-0.1)
[2.996983
0
5.003972
0
2.501986
0
5.003972
0] Tj
-4984.54 TJm
(0)
[5.003972
0] Tj
-5008.66 TJm
(0.1)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.2)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.42 TJm
(0.3)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.4)
[5.003972
0
2.501986
0
5.003972
0] Tj
-4664.46 TJm
(0.5)
[5.003972
0
2.501986
0
5.003972
0] Tj
Q
215.477 142.246 m
215.477 2691.62 l
S
3484.85 142.246 m
3484.85 2691.62 l
S
215.477 142.246 m
248.172 142.246 l
S
215.477 567.141 m
248.172 567.141 l
S
215.477 992.039 m
248.172 992.039 l
S
215.477 1416.93 m
248.172 1416.93 l
S
215.477 1841.82 m
248.172 1841.82 l
S
215.477 2266.73 m
248.172 2266.73 l
S
215.477 2691.62 m
248.172 2691.62 l
S
3484.85 142.246 m
3452.15 142.246 l
S
3484.85 567.141 m
3452.15 567.141 l
S
3484.85 992.039 m
3452.15 992.039 l
S
3484.85 1416.93 m
3452.15 1416.93 l
S
3484.85 1841.82 m
3452.15 1841.82 l
S
3484.85 2266.73 m
3452.15 2266.73 l
S
3484.85 2691.62 m
3452.15 2691.62 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 8.19688 10.9168] Tm
0 0 Td
/F8_0 8.99995 Tf
(-1)
[2.996983
0
5.003972
0] Tj
-8.08125 42.4898 Td
(-0.5)
[2.996983
0
5.003972
0
2.501986
0
5.003972
0] Tj
3.67385 84.9796 Td
(0)
[5.003972
0] Tj
-5.14256 127.4694 Td
(0.5)
[5.003972
0
2.501986
0
5.003972
0] Tj
3.67385 169.9592 Td
(1)
[5.003972
0] Tj
-5.14256 212.449 Td
(1.5)
[5.003972
0
2.501986
0
5.003972
0] Tj
3.67385 254.9388 Td
(2)
[5.003972
0] Tj
Q
0 J
/DeviceRGB {} CS
[0 0.447 0.7402] SC
215.477 1009.78 m
324.453 992.039 l
542.414 992.039 l
651.391 1229.22 l
760.375 1042.9 l
869.352 1019.97 l
978.328 1004.65 l
1087.31 1181.24 l
1196.29 1747.79 l
1305.27 1448.14 l
1414.25 1453.89 l
1523.23 1466.13 l
1632.2 1197.12 l
1741.19 1344.02 l
1850.16 1464.5 l
1959.14 1563.59 l
2068.13 1764.73 l
2177.1 1857.5 l
2286.08 1555.08 l
2395.06 1529.76 l
2504.04 1481.25 l
2613.01 1394.93 l
2722 1195.79 l
2830.97 1252.12 l
2939.95 1368.13 l
3048.93 1159.14 l
3157.91 1150.59 l
3266.89 992.039 l
3375.87 992.039 l
S
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
215.477 1172.39 m
324.453 992.039 l
542.414 992.039 l
651.391 1612.87 l
760.375 1244.34 l
869.352 1497.69 l
978.328 1650.78 l
1087.31 1381.29 l
1196.29 2377.89 l
1305.27 1793.48 l
1414.25 1724.71 l
1523.23 1560.39 l
1632.2 1217.29 l
1741.19 1291.64 l
1850.16 1023.65 l
1959.14 1128.93 l
2068.13 1269.25 l
2177.1 1116.57 l
2286.08 1247.63 l
2395.06 1342.19 l
2504.04 1360.36 l
2613.01 1226.36 l
2722 1236.71 l
2830.97 1091.03 l
2939.95 1621.07 l
3048.93 1596.94 l
3157.91 1312.13 l
3266.89 992.039 l
3375.87 992.039 l
S
/DeviceRGB {} CS
[0.9297 0.6933 0.125] SC
215.477 1841.82 m
324.453 330.113 l
433.438 484.133 l
542.414 186.172 l
651.391 142.246 l
760.375 1841.82 l
869.352 1841.82 l
978.328 142.254 l
1087.31 1701.53 l
1196.29 654.898 l
1305.27 142.246 l
1959.14 142.246 l
2068.13 608.254 l
2177.1 142.246 l
2286.08 1841.82 l
2722 1841.82 l
2830.97 142.246 l
3157.91 142.246 l
3266.89 142.305 l
3375.87 187.262 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font VWDYRY+Helvetica
%%EOF
